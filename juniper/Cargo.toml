[package]
name = "juniper"
version = "0.16.0-dev"
edition = "2018"
description = "GraphQL server library."
license = "BSD-2-Clause"
authors = [
    "Magnus Hallin <mhallin@fastmail.com>",
    "Christoph Herzog <chris@theduke.at>",
    "Christian Legnitto <christian@legnitto.com>",
    "Ilya Solovyiov <ilya.solovyiov@gmail.com>",
    "Kai Ren <tyranron@gmail.com>",
]
documentation = "https://docs.rs/juniper"
homepage = "https://graphql-rust.github.io"
repository = "https://github.com/graphql-rust/juniper"
readme = "README.md"
categories = ["asynchronous", "web-programming", "web-programming::http-server"]
keywords = ["apollo", "graphql", "server", "web"]
exclude = ["/release.toml"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = [
    "bson",
    "schema-language",
    "url",
    "uuid",
]
chrono-clock = ["chrono", "chrono/clock"]
expose-test-schema = ["anyhow", "serde_json"]
schema-language = ["graphql-parser"]

[dependencies]
anyhow = { version = "1.0.32", default-features = false, optional = true }
async-trait = "0.1.39"
bigdecimal = { version = "0.3", optional = true }
bson = { version = "2.0", features = ["chrono-0_4"], optional = true }
chrono = { version = "0.4", features = ["alloc"], default-features = false, optional = true }
chrono-tz = { version = "0.6", default-features = false, optional = true }
fnv = "1.0.3"
futures = { version = "0.3.1", features = ["alloc"], default-features = false }
futures-enum = { version = "0.1.12", default-features = false }
graphql-parser = { version = "0.4", optional = true }
indexmap = { version = "1.0", features = ["serde-1"] }
juniper_codegen = { version = "0.16.0-dev", path = "../juniper_codegen" }
rust_decimal = { version = "1.0", default-features = false, optional = true }
serde = { version = "1.0.8", features = ["derive"] }
serde_json = { version = "1.0.2", default-features = false, optional = true }
smartstring = "1.0"
static_assertions = "1.1"
time = { version = "0.3", features = ["formatting", "macros", "parsing"], optional = true }
url = { version = "2.0", optional = true }
uuid = { version = "1.0", default-features = false, optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
getrandom = { version = "0.2", features = ["js"] }
# not used, to fix `bson` compilation only
uuid_08 = { version = "0.8", package = "uuid", default-features = false, features = ["wasm-bindgen"] }

[dev-dependencies]
bencher = "0.1.2"
chrono = { version = "0.4", features = ["alloc"], default-features = false }
pretty_assertions = "1.0.0"
serde_json = "1.0.2"
tokio = { version = "1.0", features = ["macros", "time", "rt-multi-thread"] }

[[bench]]
name = "bench"
harness = false
path = "benches/bench.rs"
