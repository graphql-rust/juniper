error[E0277]: the trait bound `ObjA: IsInputType<__S>` is not satisfied
  --> fail/interface/trait/argument_non_input_type.rs:10:23
   |
10 |     fn id(&self, obj: ObjA) -> &str;
   |                       ^^^^ the trait `IsInputType<__S>` is not implemented for `ObjA`
   |
   = help: the following other types implement trait `IsInputType<S>`:
             `&T` implements `IsInputType<S>`
             `Arc<T>` implements `IsInputType<S>`
             `ArcStr` implements `IsInputType<__S>`
             `Box<T>` implements `IsInputType<S>`
             `ID` implements `IsInputType<__S>`
             `TypeKind` implements `IsInputType<__S>`
             `Vec<T>` implements `IsInputType<S>`
             `[T; N]` implements `IsInputType<S>`
           and $N others

error[E0277]: the trait bound `ObjA: FromInputValue<__S>` is not satisfied
  --> fail/interface/trait/argument_non_input_type.rs:10:23
   |
 8 | #[graphql_interface]
   | -------------------- required by a bound introduced by this call
 9 | trait Character {
10 |     fn id(&self, obj: ObjA) -> &str;
   |                       ^^^^ the trait `FromInputValue<__S>` is not implemented for `ObjA`
   |
   = help: the following other types implement trait `FromInputValue<S>`:
             `Arc<T>` implements `FromInputValue<S>`
             `ArcStr` implements `FromInputValue<__S>`
             `Box<T>` implements `FromInputValue<S>`
             `ID` implements `FromInputValue<__S>`
             `TypeKind` implements `FromInputValue<__S>`
             `Vec<T>` implements `FromInputValue<S>`
             `[T; N]` implements `FromInputValue<S>`
             `bool` implements `FromInputValue<__S>`
           and $N others
note: required by a bound in `Registry::<S>::arg`
  --> $WORKSPACE/juniper/src/executor/mod.rs
   |
   |     pub fn arg<T>(&mut self, name: impl Into<ArcStr>, info: &T::TypeInfo) -> Argument<S>
   |            --- required by a bound in this associated function
   |     where
   |         T: GraphQLType<S> + FromInputValue<S>,
   |                             ^^^^^^^^^^^^^^^^^ required by this bound in `Registry::<S>::arg`
