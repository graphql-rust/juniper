error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ the evaluated program panicked at 'Failed to implement interface `Character` on `ObjA`: Field `id` isn't implemented on `ObjA`.', $DIR/fail/interface/trait/missing_field.rs:11:8
   |
   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: erroneous constant used
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: erroneous constant used
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: erroneous constant used
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: erroneous constant used
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^
   |        |
   |        referenced constant has errors
   |        inside `<CharacterValueEnum<ObjA> as juniper::macros::reflect::Field<__S, id>>::call::_::check` at $WORKSPACE/juniper/src/macros/reflect.rs:751:36
   |        inside `<CharacterValueEnum<ObjA> as juniper::macros::reflect::Field<__S, id>>::call::_::RES` at $WORKSPACE/juniper/src/macros/reflect.rs:814:59
   |
   = note: `#[deny(const_err)]` on by default
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ the evaluated program panicked at 'Failed to implement interface `Character` on `ObjA`: Field `id` isn't implemented on `ObjA`.', $DIR/fail/interface/trait/missing_field.rs:11:8
   |
   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_subtype` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_subtype` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_subtype` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ the evaluated program panicked at 'Failed to implement interface `Character` on `ObjA`: Field `id` isn't implemented on `ObjA`.', $DIR/fail/interface/trait/missing_field.rs:11:8
   |
   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: erroneous constant used
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: erroneous constant used
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: erroneous constant used
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: erroneous constant used
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^
   |        |
   |        referenced constant has errors
   |        inside `<CharacterValueEnum<ObjA> as AsyncField<__S, id>>::call::_::check` at $WORKSPACE/juniper/src/macros/reflect.rs:751:36
   |        inside `<CharacterValueEnum<ObjA> as AsyncField<__S, id>>::call::_::RES` at $WORKSPACE/juniper/src/macros/reflect.rs:814:59
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_field_args` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ the evaluated program panicked at 'Failed to implement interface `Character` on `ObjA`: Field `id` isn't implemented on `ObjA`.', $DIR/fail/interface/trait/missing_field.rs:11:8
   |
   = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_subtype` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_subtype` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::const_concat` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::assert_subtype` (in Nightly builds, run with -Z macro-backtrace for more info)

error: any use of this value will cause an error
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!
   = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0080]: evaluation of constant value failed
  --> fail/interface/trait/missing_field.rs:11:8
   |
11 |     fn id(&self) -> &str;
   |        ^^ referenced constant has errors
   |
   = note: this error originates in the macro `$crate::format_type` (in Nightly builds, run with -Z macro-backtrace for more info)
