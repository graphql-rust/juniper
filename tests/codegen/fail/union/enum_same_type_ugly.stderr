error[E0119]: conflicting implementations of trait `MutuallyExclusive` for type `std::string::String`
 --> fail/union/enum_same_type_ugly.rs:3:10
  |
3 | #[derive(GraphQLUnion)]
  |          ^^^^^^^^^^^^
  |          |
  |          first implementation here
  |          conflicting implementation for `std::string::String`
  |
  = note: this error originates in the macro `::juniper::sa::assert_type_ne_all` which comes from the expansion of the derive macro `GraphQLUnion` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0277]: the trait bound `std::string::String: GraphQLObject<__S>` is not satisfied
 --> fail/union/enum_same_type_ugly.rs:5:7
  |
5 |     A(std::string::String),
  |       ^^^^^^^^^^^^^^^^^^^ the trait `GraphQLObject<__S>` is not implemented for `std::string::String`
  |
  = help: the following other types implement trait `GraphQLObject<S>`:
            <&T as GraphQLObject<S>>
            <Arc<T> as GraphQLObject<S>>
            <Argument<'a, S> as GraphQLObject<S>>
            <Box<T> as GraphQLObject<S>>
            <EnumValue as GraphQLObject<__S>>
            <SchemaType<'a, S> as GraphQLObject<S>>
            <juniper::meta::Field<'a, S> as GraphQLObject<S>>
            <juniper::schema::model::DirectiveType<'a, S> as GraphQLObject<S>>
            <juniper::schema::model::TypeType<'a, S> as GraphQLObject<S>>

error[E0277]: the trait bound `std::string::String: GraphQLObject<__S>` is not satisfied
 --> fail/union/enum_same_type_ugly.rs:6:7
  |
6 |     B(String),
  |       ^^^^^^ the trait `GraphQLObject<__S>` is not implemented for `std::string::String`
  |
  = help: the following other types implement trait `GraphQLObject<S>`:
            <&T as GraphQLObject<S>>
            <Arc<T> as GraphQLObject<S>>
            <Argument<'a, S> as GraphQLObject<S>>
            <Box<T> as GraphQLObject<S>>
            <EnumValue as GraphQLObject<__S>>
            <SchemaType<'a, S> as GraphQLObject<S>>
            <juniper::meta::Field<'a, S> as GraphQLObject<S>>
            <juniper::schema::model::DirectiveType<'a, S> as GraphQLObject<S>>
            <juniper::schema::model::TypeType<'a, S> as GraphQLObject<S>>
